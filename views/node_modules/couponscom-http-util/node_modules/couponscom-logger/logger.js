/**
 * Logger - Component to encapsulate all logic related to logging
 * Our current implementation relies on the Winston logging library
 *
 * Usage:
 *     logger = require('couponscom-logger'),
 *     logger.info("test");
 */

'use strict';

var loggerLevelsConfig = require('./config/logger-level-config'),
    logger = require('winston'),
    os = require('os'),
    logLevel = 'debug',
    LOGFILE = 'error.log',
    LOGDIR =  '/home/ci/logs/web/node/';

// Set customed CI logging level
logger.setLevels(loggerLevelsConfig.levels);

// set appropriate values for production
/* istanbul ignore else */
if (process.env.NODE_ENV === 'production') {
    logger.remove(logger.transports.Console);
    logger.emitErrs = false;
    logLevel = /* istanbul ignore next */ process.env.LOGLEVEL || 'metric';
}

// Add log rotate transport
logger.add(logger.transports.DailyRotateFile, {
    level: logLevel,
    filename: LOGFILE,
    dirname: LOGDIR,
    datePattern: '-yyyyMMdd',
    json: false,
    handleExceptions: true,
    timestamp: function () {
        var d,
            dateTime;

        // generate formatted date/time
        d = new Date();
        dateTime = d.toLocaleString().substring(4, 24); // Mar 18 2014 14:22:54

        // return the formatted prefix
        return dateTime + ' ' + os.hostname();
    }
});

// this returns the whole winston object so you can call its methods directly
module.exports = logger;
