{
  "name": "couponscom-util",
  "version": "1.14.1-6653-17c0ac888370",
  "description": "Coupons.com util component package for sharable functionality",
  "repository": {
    "type": "hg",
    "url": "ssh://merc.corp.coupons.com//home/hg/CouponsComN2"
  },
  "author": {
    "name": "Coupons.com Rebuild Team",
    "email": "RebuildDevelCoreENG@couponsinc.com"
  },
  "main": "util.js",
  "license": "proprietary",
  "publishConfig": {
    "registry": "http://npm.corp.coupons.com:4873/"
  },
  "scripts": {
    "test": "grunt test"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "dependencies": {
    "dateformat": "^1.0.11",
    "node-uuid": "^1.4.1",
    "inflection": "^1.7.0",
    "unique-concat": "^0.2.2"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.4",
    "grunt-mocha-cli": "~1.5.0",
    "istanbul": "^0.2.6",
    "mocha-jenkins-reporter": "~0.1.0",
    "express": "~4.0.0",
    "supertest": "~0.10.0",
    "grunt-shell": "^0.6.4"
  },
  "readme": "#Package Description\nA utility package generate utility functions that can be shared across component.\nPackage include various of utility that you could require separately as your need,\nsuch as generate default token passed to REST call handling header and trailing slash\n\n# API\n## 1.x\n\n### getAssignedDate()\nreturn a date based on numday calculation\n\nargument:\n- (int) required num date from the date object (could be positive or negative number to calculate next or previous day)\n- (Date) optional Date object. If this is not passed, we will take current Date object\n\nreturn Date obj which result from calculation\n\n### cloneObj()\n\nargument:\n- (obj) object to be clone\n\nreturn new object which is a clone of the object passed as argument, without copy references\n\n### extendObj()\n\nargument:\n- (obj) object to be extended\n- (obj) object to extend\n\nreturn extend object of the first objects, duplicate attribute will be overwritten by second object in argument if it exists.\n\n### isEmptyObj()\n\nargument\n- (obj) object to check if its empty\n\nreturn (boolean) value true if object is empty or value passed is not an object, false otherwise\n\n### removeEmptyObjFromArr()\n\nargument\n- (array) object to clean up empty element\n\nreturn (array) new array without empty element\n\n### removeElemFromArr\n\nargument\n- object element to be cleaned up\n\nreturn (array) new array without that element\n\n### uniqueConcat()\n\nargument\n- (array) object1\n- (array) object2 to be merged with object 1\n\n### getShortDateFormat()\n\nargument\n- (string) for current date\n\nreturn (string) new date format in form mm/dd/yy\n\n### getISODateFormat()\n\nargument\n- (string) for current date\n\nreturn (string) new date format in form yyyy-mm-dd\n\n### generateGUUID()\n\nreturn (string) random GUUID generated\n\n### titleize()\n\nargument\n- (string) to be title-ize\n\nreturn (string) in title format\n\n# Jenkins Jobs\n\n[Release](http://jenkins.corp.coupons.com/view/N2/view/Release/job/n2-util-release/)\n- [coverage](http://jenkins.corp.coupons.com/view/N2/view/Release/job/n2-util-release-coverage/)\n- [jslint](http://jenkins.corp.coupons.com/view/N2/view/Release/job/n2-util-release-lint-js/)\n- [unit tests](http://jenkins.corp.coupons.com/view/N2/view/Release/job/n2-util-release-unittests/)\n\n[Integration](http://jenkins.corp.coupons.com/view/N2/view/Release/job/n2-util-integration/)\n- [coverage](http://jenkins.corp.coupons.com/view/N2/view/Release/job/n2-util-coverage/)\n- [jslint](http://jenkins.corp.coupons.com/view/N2/view/Release/job/n2-util-lint-js/)\n- [unit tests](http://jenkins.corp.coupons.com/view/N2/view/Release/job/n2-util-unittests/)\n",
  "readmeFilename": "README.md",
  "_id": "couponscom-util@1.14.1-6653-17c0ac888370",
  "dist": {
    "shasum": "481e6a5977d6724c9763f845b52183b3362490e5"
  },
  "_from": "couponscom-util@^1.0.0",
  "_resolved": "http://npm.corp.coupons.com:4873/couponscom-util/-/couponscom-util-1.14.1-6653-17c0ac888370.tgz"
}
