/**
 * Utility functions for URL token replacer
 * Usage: Replace token in URL parameter or placeholder in url path
 * Example: www.coupons.com/@@@pnz@@@ replace @@@pnz@@@ with correct pid/nid/zid in URL parameter
 *          cpr.int.lb/:id/:sig replace url path with correctid and signature
 */
'use strict';

var httpUtil = require('couponscom-http-util/httpUtil');

module.exports = (function () {
    /**
     * Function replace token in url parameter with appropriate value
     * @method tokenReplace
     * @param {string} url that having the token needed replacing
     * @param {object} obj containing key and value to replace
     */
    function tokenReplace (url, obj) {
        var data = obj;
        for (var key in data) {
            if ((url.indexOf('@@@' + key + '@@@')) > -1) {
                var separator = (url.indexOf('?') !== -1) ? '&' : '?',
                    strReplace = (data[key] === '') ? '' : (separator + key + '=' + data[key]);
                url = url.replace('@@@' + key + '@@@', strReplace);
            } else if ((url.indexOf(':' + key)) > -1) {
                url = url.replace(':' + key, data[key]);
            }
        }
        return url;
    }

    /**
     * Replace @@@pnz@@@ token with appropriate pnz
     * @method tokenReplacePNZ
     * @param {string} url that having @@@pnz@@@ token needed replacing
     */
    function tokenReplacePNZ (url) {
        var pnzObj = getCurrentPNZ();
        url = url.replace('@@@pnz@@@', '@@@pid@@@@@@nid@@@@@@zid@@@');

        return (tokenReplace(url, pnzObj));
    }

    /**
     * Helper funtion to get current pid/nid/zid from URL parameter
     * @method getCurrentPNZ
     */
    function getCurrentPNZ () {
        return {
            pid: httpUtil.getQueryValue('pid') || '',
            nid: httpUtil.getQueryValue('nid') || '',
            zid: httpUtil.getQueryValue('zid') || ''
        };
    }

    return {
        tokenReplace: tokenReplace,
        tokenReplacePNZ: tokenReplacePNZ
    };

}());
